automation:

  ####################################################
  #                                                  #
  #                AUTOMAZIONI CASA                  #
  #                                                  #
  ####################################################

  - alias: Rientro a Casa la Sera
    trigger:
      platform: state
      entity_id: group.family
      to: 'home'
    condition:
      condition: time
      after: '21:00:00'
      before: '04:00:00'
    action:
    - service: light.turn_on
      data:
        entity_id:
          - light.luce1
          - light.luce2
          - light.luce_giardino

  - id: '1595590956565'
    alias: Deumidificatore Notte
    trigger:
      platform: time_pattern
      hours: /1
    condition:
      condition: and
      conditions:
        - condition: time
          after: '22:00:00'
          before: '07:00:00'
        - condition: state
          entity_id: group.family
          state: 'home'
    action:
    - service: script.turn_on
      entity_id: script.daikin_dry_camera_automation
    
  ####################################################
  #                                                  #
  #            AUTOMAZIONI DISPOSITIVI               #
  #                                                  #
  ####################################################

  - alias: Volume Echo - Echo Mattina
    trigger:
      platform: time
      at: '07:00:00'
    action:
      service: media_player.volume_set
      data: 
        entity_id:
          - media_player.dot_bagno
          - media_player.dot_camera
          - media_player.dot_studio
          - media_player.show_sala
          - media_player.echo_sala
        volume_level: 0.4

  - alias: Volume Echo - Giorno
    trigger:
      platform: time
      at: '10:00:00'
    action:
      service: media_player.volume_set
      data: 
        entity_id:
          - media_player.dot_bagno
          - media_player.dot_camera
          - media_player.dot_studio
          - media_player.show_sala
          - media_player.echo_sala
        volume_level: 0.6

  - alias: Volume Echo - Sera
    trigger:
      platform: time
      at: '21:00:00'
    action:
      service: media_player.volume_set
      data: 
        entity_id:
          - media_player.dot_bagno
          - media_player.dot_camera
          - media_player.dot_studio
          - media_player.show_sala
          - media_player.echo_sala
        volume_level: 0.4

  - alias: Volume Echo - Notte
    trigger:
      platform: time
      at: '23:50:00'
    action:
      service: media_player.volume_set
      data: 
        entity_id:
          - media_player.dot_bagno
          - media_player.dot_camera
          - media_player.dot_studio
          - media_player.show_sala
          - media_player.echo_sala
        volume_level: 0.4

  - alias: MQTT Announce
    trigger:
    - event: start
      platform: homeassistant
    condition: []
    action:
    - service: mqtt.publish
      data:
        payload: announce
        topic: shellies/command

  ####################################################
  #                                                  #
  #              AUTOMAZIONI SISTEMA                 #
  #                                                  #
  ####################################################
  
  - alias: z800_restart
    trigger:
      platform: state
      entity_id: input_select.pcoptions
      to: "Restart"
    action:
      - service: shell_command.restart_z800
  - alias: z800_shutdown
    trigger:
      platform: state
      entity_id: input_select.pcoptions
      to: "Shutdown"
    action:
      - service: shell_command.shutdown_z800
 
  ####################################################
  #                                                  #
  #            AUTOMAZIONI WIDEGET IOS               #
  #                                                  #
  ####################################################

  - alias: "iOS Widget - Accendi PC"
    initial_state: true
    trigger:
      - platform: event
        event_type: ios.action_fired
        event_data:
          actionName: 'Accendi_PC'
    action:
      service: switch.turn_on
      entity_id: switch.pc_studio

  - alias: "iOS Widget - Esco"
    initial_state: true
    trigger:
      - platform: event
        event_type: ios.action_fired
        event_data:
          actionName: 'Esco'
    action:
      service: script.turn_on
      entity_id: script.uscita_casa

  - alias: "iOS Widget - Apri Cancello"
    initial_state: true
    trigger:
      - platform: event
        event_type: ios.action_fired
        event_data:
          actionName: 'Apri_Canello'
    action:
      service: switch.toggle
      entity_id: switch.cancello

  ####################################################
  #                                                  #
  #              AUTOMAZIONI PUSH IOS                #
  #                                                  #
  ####################################################

  ###############################
  #                             #
  #            LUCI             #  
  #                             #
  ###############################

    #Step 2 Notifica Luci Accese 05:00/17:30 (Step 1 sul Package iOS)
  - alias: 'Notifica iOS - Luci Giorno fuori casa' 
    id: notifica_luci_giorno_fuori_casa
    trigger:
      - platform: zone
        entity_id: 
          - person.andrea
          - person.mary
        zone: zone.home
        event: leave
    condition: 
      condition: and
      conditions:
      - condition: template
        value_template: "{{ states('person.andrea') != 'home' }}"
      - condition: template
        value_template: "{{ states('person.mary') != 'home' }}"
      - condition: state
        entity_id: group.luci_casa
        state: 'on'
      - condition: time
        after: '05:00:00'
        before: '17:30:00'
    action: 
      - service: >
          {% if trigger.entity_id == 'person.andrea' %}
            notify.mobile_app_ndrs_iphone
          {% else %}
          notify.mobile_app_iphone_di_marilena_pinto
          {% endif %} 
        data:
          title: "Luci Accese"
          message: "Vuoi Spegnerle?"
          data:
            push:
              category: "notifica_luci"

    #Step 2.1 Notifica Luci Accese 17:30/05:00 (Step 1 sul Package iOS)
  - alias: 'Notifica iOS - Luci Notte fuori casa' 
    id: notifica_luci_notte_fuori_casa
    trigger:
      - platform: zone
        entity_id: 
          - person.andrea
          - person.mary
        zone: zone.home
        event: leave
    condition: 
      condition: and
      conditions:
      - condition: template
        value_template: "{{ states('person.andrea') != 'home' }}"
      - condition: template
        value_template: "{{ states('person.mary') != 'home' }}"
      - condition: state
        entity_id: group.luci_casa_scena_esco
        state: 'on'
      - condition: time
        after: '17:30:00'
        before: '05:00:00'
    action: 
      - service: >
          {% if trigger.entity_id == 'person.andrea' %}
            notify.mobile_app_ndrs_iphone
          {% else %}
            notify.mobile_app_iphone_di_marilena_pinto
          {% endif %} 
        data:
          title: "Luci Accese"
          message: "Vuoi Spegnerle?"
          data:
            push:
              category: "notifica_luci"              

    #Step 3 Notifica Luci Accese 
  - alias: "iOS Notification Pressed - Luci Giorno"
    id: ios_notification_pressed_luci_giorno
    trigger:
      - platform: event
        event_type: ios.notification_action_fired
        event_data:
          actionName: LUCI_OFF
    action:
      - service: script.turn_on
        entity_id: script.uscita_casa

  ###############################
  #                             #
  #           CLIMA             #  
  #                             #
  ###############################
    
    #Step 2 Notifica Clima Accesi fuori casa
  - alias: 'Notifica iOS - Clima Accesi fuori casa' 
    id: notifica_clima_accesi_fuori_casa
    trigger:
      - platform: zone
        entity_id: 
          - person.andrea
          - person.mary
        zone: zone.home
        event: leave
    condition: 
      condition: and
      conditions:
      - condition: template
        value_template: "{{ states('person.andrea') != 'home' }}"
      - condition: template
        value_template: "{{ states('person.mary') != 'home' }}"
      - condition: or
        conditions:
        - condition: template
          value_template: "{{ not is_state('climate.daikin_studio', 'off') }}"
        - condition: template
          value_template: "{{ not is_state('climate.daikin_camera', 'off') }}"  
        - condition: template
          value_template: "{{ not is_state('climate.daikin_sala', 'off') }}"  
    action: 
      - service: >
          {% if trigger.entity_id == 'person.andrea' %}
            notify.mobile_app_ndrs_iphone
          {% else %}
            notify.mobile_app_iphone_di_marilena_pinto
          {% endif %} 
        data:
          title: "Clima Accesi"
          message: "Vuoi Spegnerli?"
          data:
            push:
              category: "notifica_clima"              

    #Step 2.1 Notifica Clima Studio o Sala accesi dopo le 22:00
  - alias: 'Notifica iOS - Clima Studio o Sala accesi dopo le 22:00' 
    id: notifica_clima_studio_sala_accesi_sera
    trigger:
      - platform: time
        at: "22:00:00"
    condition: 
      condition: or
      conditions:
        - condition: template
          value_template: "{{ not is_state('climate.daikin_studio', 'off') }}"  
        - condition: template
          value_template: "{{ not is_state('climate.daikin_sala', 'off') }}"  
    action: 
      - service: notify.mobile_app_ndrs_iphone
        data:
          title: "Clima Accesi"
          message: "Vuoi Spegnerli?"
          data:
            push:
              category: "notifica_clima"  

    #Step 3 Notifica Clima Accesi
  - alias: "iOS Notification Pressed - Clima"
    id: ios_notification_pressed_clima
    trigger:
      - platform: event
        event_type: ios.notification_action_fired
        event_data:
          actionName: CLIMA_OFF
    action:
      - service: climate.turn_off
        entity_id: climate.daikin_sala
      - service: climate.turn_off
        entity_id: climate.daikin_studio

  ###############################
  #                             #
  #             PC              #  
  #                             #
  ###############################

    #Step 2 Notifica PC acceso dopo le 22:30
  - alias: 'Notifica iOS - PC acceso dopo le 22:30' 
    id: notifica_pc_acceso_sera
    trigger:
      - platform: time
        at: "22:30:00"
    condition: 
        - condition: state
          entity_id: sensor.pc
          state: 'Online'  
    action: 
      - service: notify.mobile_app_ndrs_iphone
        data:
          title: "PC Acceso"
          message: "Vuoi Spegnerlo?"
          data:
            push:
              category: "notifica_pc" 

    #Step 3 Notifica PC Acceso
  - alias: "iOS Notification Pressed - PC"
    id: ios_notification_pressed_pc
    trigger:
      - platform: event
        event_type: ios.notification_action_fired
        event_data:
          actionName: PC_OFF
    action:
      - service: switch.turn_off
        entity_id: switch.pc_studio
    
  ####################################################
  #                                                  #
  #                 NOTIFICHE ALEXA                  #
  #                                                  #
  ####################################################

  - id: '1595590956513'
    alias: Mary Esce da Lavoro
    description: Notifica Alexa - Mary esce da Lavoro
    trigger:
      platform: state
      entity_id: person.mary
      from: 'Lavoro Mary'
      to: 'not_home'
    condition:
      - condition: state
        entity_id: person.andrea
        state: 'home'
    action:
    - service: notify.alexa_media_sala
      data:
        message: Mary è uscita da Lavoro
        title: HomeAssistant
        data: 
          type: announce
          method: spoken
    - service: notify.alexa_media_dot_studio
      data:
        message: Mary è uscita da Lavoro
        title: HomeAssistant
        data: 
          type: announce
          method: spoken

  - id: '15955909565112'
    alias: Notifica Alexa - Mary Esce da Casa Pinto
    description: Notifica Alexa quando Mary esce da casa Pinto
    trigger:
      platform: state
      entity_id: person.mary
      from: 'Casa Pinto'
      to: 'not_home'
    condition:
      - condition: state
        entity_id: person.andrea
        state: 'home'
    action:
    - service: notify.alexa_media_sala
      data:
        message: Mary è uscita da Casa Pinto
        title: HomeAssistant
        data: 
          type: announce
          method: spoken
    - service: notify.alexa_media_dot_studio
      data:
        message: Mary è uscita da Casa Pinto!
        title: HomeAssistant
        data: 
          type: announce
          method: spoken

  - alias: Notifica Alexa - Ritorno a casa
    trigger:
      platform: state
      entity_id: group.family
      to: 'home'
    condition: []
    action:
    - service: notify.alexa_media_sala
      data:
        target:
        - notify.alexa_media
        data:
          type: announce
          method: spoken
        message: "Bentornati a casa." 

  ####################################################
  #                                                  #
  #               NOTIFICHE TELEGRAM                 #
  #                                                  #
  ####################################################

  - id: '1595590956510'
    alias: Notifica Telegram - Stato della Casa
    description: Notifica Telegram - Stato della Casa
    trigger:
      platform: state
      entity_id: group.tutti
      from: 'home'
      to: 'not_home'
    condition: []
    action:
    - data:
        message: |
           *Sala*
            - La temperatura in Sala è di {{ states('sensor.daikin_sala_inside_temperature')}}°
            - Il Clima è {% if is_state("climate.daikin_sala", "on") %} acceso {% else %} spento {%- endif %}
            - Luci {% if is_state("group.luci_sala", "on") %} accese! {% else %} spente {%- endif %}
           *Studio*
            - Il Clima è {% if is_state("climate.daikin_studio", "on") %} acceso {% else %} spento {%- endif %}
            - Luce {% if is_state("light.luce_studio", "on") %} accesa! {% else %} spenta {%- endif %}
            - PC {% if is_state("device_tracker.pc_studio", "home") %} acceso {% else %} spento {%- endif %}
            - Temperatura Raspberry: {{ states('sensor.raspberry_temp')}}°
           *Camera*
            - Il Clima è {% if is_state("climate.daikin_camera", "on") %} acceso {% else %} spento {%- endif %}
            - Luce {% if is_state("light.luce_camera", "on") %} accesa! {% else %} spenta {%- endif %}
           *Bagno*
            - Luce {% if is_state("light.luce_bagno", "on") %} accesa! {% else %} spenta {%- endif %}
           *Giardino*
            - Luce {% if is_state("light.luce_giardino", "on") %} accesa! {% else %} spenta {%- endif %}
        title: 'La casa è vuota, controlla le stanze:'
      service: notify.famiglia 

  - id: '1595590956511'
    alias: Notifica Telegram - System Check
    description: Notifica Telegram sullo stato del sistema
    trigger:
      platform: time_pattern
      hours: /5
    condition:
      condition: time
      after: '09:00:00'
      before: '22:00:00'
    action:
    - data:
        message: |
           *System Check*
            - Il PC è {% if is_state("device_tracker.pc_studio", "home") %} Acceso {% else %} Spento {%- endif %}
            - Temperatura Raspberry: {{ states('sensor.raspberry_temp')}}°
            
            - OMV Uptime: {{ states('sensor.omv_uptime')}}h
            - ADS Bloccati: {{ states('sensor.pi_hole_ads_percentage_blocked_today')}}%

            - Gli Shelly sono {% if is_state("group.stato_shelly", "on") %} accesi {% else %} spenti {%- endif %}
            
            - Versione Hassio installata: {{ states('sensor.hass_version_installed')}}
            - Versione Hassio disponibile: {{ states('sensor.hass_version_latest')}}
        title: Check Sistema
      service: notify.andrea

  - alias: Notifica Telegram - Temperatura esterna maggiore a quella interna
    initial_state: 'on'
    trigger:
      platform: template
      value_template: "{{ states('sensor.daikin_sala_outside_temperature') | float > states('sensor.daikin_sala_inside_temperature') | float and states('sensor.daikin_sala_inside_temperature') | float > 0 }}"
    condition:
      condition: state
      entity_id: sensor.season
      state: "spring"
    action:
       service: notify.andrea
       data:
         title: "Monitoraggio Temperatura - Primavera"
         message: "Rilevata temperatura esterna superiore a quella interna."

  - alias: Notifica Telegram - Temperatura esterna inferiore a quella interna
    initial_state: 'on'
    trigger:
      platform: template
      value_template: "{{ states('sensor.daikin_sala_outside_temperature') | float > states('sensor.daikin_sala_inside_temperature') | float and states('sensor.daikin_sala_inside_temperature') | float > 0 }}"
    condition:
      condition: state
      entity_id: sensor.season
      state: "spring"
    action:
       service: notify.andrea
       data:
         title: "Monitoraggio Temperatura - Autunno"
         message: "Rilevata temperatura esterna inferiore a quella interna."
  
  ####################################################
  #                                                  #
  #                    TEMA IOS                      #
  #                                                  #
  ####################################################  

  - alias: "Frontend: turn on dark mode"
    trigger:
      platform: time
      at: "20:00:00"
    action:
      entity_id: input_boolean.dark_mode
      service: input_boolean.turn_on

  - alias: "Frontend: turn on light mode"
    trigger:
      platform: time
      at: "06:00:00"
    action:
      entity_id: input_boolean.dark_mode
      service: input_boolean.turn_off

  - alias: "Frontend: change theme"
    trigger:
      - platform: state
        entity_id: input_select.theme
      - platform: state
        entity_id: input_boolean.dark_mode
      - platform: state
        entity_id: input_boolean.theme_alternative
      - platform: homeassistant
        event: start
    action:
      service: frontend.set_theme
      data:
        name: >
          {% set which = "dark" if is_state("input_boolean.dark_mode", "on") else "light" -%}
          {% set name = states("input_select.theme") -%}
          {% set suffix = "-alternative" if is_state("input_boolean.theme_alternative", "on") else "" -%}
          ios-{{ which }}-mode-{{ name }}{{ suffix }}